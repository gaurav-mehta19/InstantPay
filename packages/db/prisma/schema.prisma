// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL1")
}

model User {
  id String @id @default(cuid())
  phone String @unique
  password String?
  name String
  balance Balance[]
  onRampTransaction OnRampTransaction[]
  p2pTransactionFromUser P2PTransaction[] @relation(name: "FromUserRealtion")
  p2pTransactionToUser P2PTransaction[] @relation(name: "ToUserRealtion")
}

model Balance{
  id String @id @default(cuid())
  userId String @unique
  amount Int
  locked Int
  user User @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id String @id @default(cuid())
  status Status
  token String @unique 
  provider String
  amount Int
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model P2PTransaction {
  id String @id @default(cuid())
  fromUserId String
  toUserId String
  status Status
  amount Int
  fromUser User @relation(name: "FromUserRealtion", fields: [fromUserId], references: [id])
  toUser User @relation(name: "ToUserRealtion", fields: [toUserId], references: [id])
  direction String
  createdAt DateTime @default(now())
}

model Bank {
  id String @id @default(cuid())
  accountNumber String @unique
  balance Int
  name String
  userID String 
  password String
}

enum Status {
  Processing
  Success
  Failed
}
